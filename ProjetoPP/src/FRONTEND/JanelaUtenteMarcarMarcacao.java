package FRONTEND;

import BACKEND.CentroVacinacao;
import BACKEND.Serializacao;
import BACKEND.Sistema;
import BACKEND.Utente;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class JanelaUtenteMarcarMarcacao extends javax.swing.JFrame {

    private Sistema sistema;
    private Serializacao dados;

    public JanelaUtenteMarcarMarcacao(Sistema sistema, Serializacao dados) {
        initComponents();
        this.sistema = sistema;
        this.dados = dados;
        preencherDatas();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }

    /**
     * Metodo para listar as datas para marcar uma marcaçao
     */
    private void preencherDatas() {
        Utente utente = (Utente) sistema.getUtilizadorLigado();
        CentroVacinacao centro = utente.getCentro_vacinacao();
        ArrayList<LocalDate> datas = centro.getMarcacoes().listarDias();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("d/MM/uuuu");

        if (!datas.isEmpty()) {
            for (LocalDate data : datas) {
                if (centro.getMarcacoes().numMarcaoesPorDia(data) < centro.getN_max_marcacoes()) {
                    comboData.addItem(data.format(formatter));
                }

            }
        }
        for (int i = 0; i < 30; i++) {
            LocalDate d = LocalDate.now().plusDays(i);
            if (!datas.contains(d)) {
                comboData.addItem(d.format(formatter));
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboData = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        txtHora = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(18, 30, 49));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Marcação Vacinação");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 560, 48));

        comboData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha uma data..." }));
        comboData.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(3, 122, 118)));
        jPanel1.add(comboData, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 290, 50));

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(18, 30, 49));
        jLabel4.setText("Escolha uma Hora");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        btnVoltar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(18, 30, 49));
        btnVoltar.setText("Voltar");
        btnVoltar.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(18, 30, 49), new java.awt.Color(18, 30, 49)));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        jPanel1.add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 500, 90, 33));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(18, 30, 49));
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(18, 30, 49), new java.awt.Color(18, 30, 49)));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, 90, 33));

        txtHora.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 290, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENS/borda2222.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(18, 30, 49));
        jLabel5.setText("Escolha uma Data");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
        JanelaUtente janela = new JanelaUtente(sistema, dados);
        janela.setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtHora.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza uma hora para a marcacao");
            txtHora.requestFocus();
            return;
        }
        Utente utente = (Utente) sistema.getUtilizadorLigado();
        CentroVacinacao c = utente.getCentro_vacinacao();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("d/MM/uuuu");
        LocalDate dia = LocalDate.parse(comboData.getSelectedItem().toString(), formatter);
        DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern("HH:mm");
        LocalTime hora = LocalTime.parse(txtHora.getText(), formatter2);
        LocalDateTime data = LocalDateTime.of(dia, hora);
        if (c.getMarcacoes().numMarcacoesPorHora(data) == c.getN_posto_atend()) {
            JOptionPane.showMessageDialog(this, "Nao existem postos de atentimento disponiveis para esta hora");
            txtHora.requestFocus();
            return;
        } else {
            utente.getCentro_vacinacao().getMarcacoes().marcar(data, utente);
            dispose();
            JanelaUtente janela = new JanelaUtente(sistema, dados);
            janela.setVisible(true);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> comboData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtHora;
    // End of variables declaration//GEN-END:variables
}
