package FRONTEND;

import BACKEND.CentroVacinacao;
import BACKEND.Gestor;
import BACKEND.RepositorioDoencas;
import BACKEND.Serializacao;
import BACKEND.Sistema;
import BACKEND.Utente;
import BACKEND.Vacina;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class JanelaGestoresMarcacoesVacinar extends javax.swing.JFrame {

    private Sistema sistema;
    private Serializacao dados;
    private Utente utente;
    private LocalDateTime data;
    private Vacina vacina;

    public JanelaGestoresMarcacoesVacinar(Sistema sistema, Serializacao dados, Utente utente, LocalDateTime data) {
        initComponents();
        this.sistema = sistema;
        this.dados = dados;
        this.utente = utente;
        this.data = data;
        preencherVacinas();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }

    public JanelaGestoresMarcacoesVacinar(Sistema sistema, Serializacao dados, Utente utente, LocalDateTime data, Vacina vacina) {
        initComponents();
        this.sistema = sistema;
        this.dados = dados;
        this.utente = utente;
        this.data = data;
        this.vacina = vacina;
        preencherVacinas();
        comboVacina.setSelectedItem(vacina.getNome());
        comboVacina.setEnabled(false);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }

    /**
     * Metodo para comparar as doenças entre uma dada vacina e um dado utente
     *
     * @param vacina
     * @param utente
     * @return
     */
    private boolean compararDoencas(Vacina vacina, Utente utente) {
        RepositorioDoencas doencas_utente = utente.getRepDoencas();
        RepositorioDoencas doencas_vacina = vacina.getDoencas();
        for (int i = 0; i < doencas_vacina.qtdDoencas(); i++) {
            String doenca = doencas_vacina.procurarDoenca(i);
            if (doencas_utente.existeDoenca(doenca)) {
                return true;
            }
        }
        return false;
    }

    /**
     * Metodo para comparar a idade entre um utente e a idade maxima e minima
     * para tomar uma dada vacina
     *
     * @param vacina
     * @param utente
     * @return
     */
    private boolean verificarIdadeComVacina(Vacina vacina, Utente utente) {
        return utente.calcIdade() >= vacina.getIdadeMin() && utente.calcIdade() <= vacina.getIdadeMax();
    }

    /**
     * Metodo para listar as vacinas que sao possiveis administrar a um utente
     *
     * @param utente
     * @return
     */
    private ArrayList<Vacina> melhorVacinaParaUtente(Utente utente) {
        ArrayList<Vacina> vacinas = new ArrayList<>();
        CentroVacinacao c = sistema.getCentros_Vacinacao().procurarPorGestor((Gestor) sistema.getUtilizadorLigado());
        for (Vacina v : c.getStock_vacina().listarVacinas()) {
            if (!compararDoencas(v, utente) && verificarIdadeComVacina(v, utente)) {
                vacinas.add(v);
            }
        }
        return vacinas;
    }

    /**
     * Metodo para listar as vacinas
     */
    private void preencherVacinas() {
        ArrayList<Vacina> vacinas = melhorVacinaParaUtente(utente);
        for (Vacina vacina : vacinas) {
            comboVacina.addItem(vacina.getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comboVacina = new javax.swing.JComboBox<>();
        txtEfeitos = new javax.swing.JTextField();
        btnVacinar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(18, 30, 49));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Registo Vacinação");
        jLabel2.setToolTipText("");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 560, 48));

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(18, 30, 49));
        jLabel7.setText("Efeitos Secundários Registados");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(18, 30, 49));
        jLabel8.setText("Tipo de Vacina Administrada");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        comboVacina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma vacina" }));
        comboVacina.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(18, 30, 49)));
        jPanel2.add(comboVacina, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 350, 40));

        txtEfeitos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEfeitos.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel2.add(txtEfeitos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 340, 40));

        btnVacinar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnVacinar.setForeground(new java.awt.Color(18, 30, 49));
        btnVacinar.setText("Vacinar");
        btnVacinar.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(18, 30, 49), new java.awt.Color(18, 30, 49)));
        btnVacinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVacinarActionPerformed(evt);
            }
        });
        jPanel2.add(btnVacinar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 520, 90, 33));

        btnVoltar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(18, 30, 49));
        btnVoltar.setText("Voltar");
        btnVoltar.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(18, 30, 49), new java.awt.Color(18, 30, 49)));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        jPanel2.add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 520, 90, 33));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENS/borda2222.png"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVacinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVacinarActionPerformed
        if (comboVacina.getSelectedItem().toString().equalsIgnoreCase("Selecione uma vacina")) {
            JOptionPane.showMessageDialog(this, "Selecione uma vacina para administrar");
            comboVacina.requestFocus();
            return;
        }
        Vacina vacina_adm = null;
        for (Vacina v : sistema.getVacinas()) {
            if (v.getNome().equalsIgnoreCase(comboVacina.getSelectedItem().toString())) {
                vacina_adm = v;
            }
        }
        LocalDateTime data_dia = LocalDateTime.now();
        CentroVacinacao c = sistema.getCentros_Vacinacao().procurarPorGestor((Gestor) sistema.getUtilizadorLigado());

        c.getStock_vacina().remover(vacina_adm, 1L);
        c.setVacinas_administradas(c.getVacinas_administradas() + 1);
        utente.setN_vacinas_tomadas(utente.getN_vacinas_tomadas() + 1);
        utente.getDatas_vacinacao().add(data_dia);
        utente.setVacina(vacina_adm);
        c.getMarcacoes().cancelar(data, utente);
        if (!txtEfeitos.getText().trim().isEmpty()) {
            RepositorioDoencas e = c.getEfeitos_sec_registados();
            e.adicionar(txtEfeitos.getText());
        }
        dispose();
        if (vacina_adm.getNumTomas() == utente.getN_vacinas_tomadas()) {
            utente.setVacina_administrada(true);
            dispose();
            JanelaGestoresMarcacoes janela = new JanelaGestoresMarcacoes(sistema, dados);
            janela.setVisible(true);
        } else {
            dispose();
            JanelaGestoresMarcacoesVacinarDoses janela = new JanelaGestoresMarcacoesVacinarDoses(sistema, dados, utente, LocalDateTime.now(), vacina_adm);
            janela.setVisible(true);
        }
    }//GEN-LAST:event_btnVacinarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
        JanelaGestor janela = new JanelaGestor(sistema, dados);
        janela.setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVacinar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> comboVacina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtEfeitos;
    // End of variables declaration//GEN-END:variables
}
